// This file was generated by [rspc](https://github.com/oscartbeaumont/rspc). Do not edit this file manually.

export type Procedures = {
    queries: 
        { key: "mdx-popular-titles", input: never, result: Results<ApiObject<MangaAttributes>> },
    mutations: never,
    subscriptions: never
};

/**
 * Used in the `related` field of a Manga relationships.
 * 
 * <https://api.mangadex.org/docs/static-data/#manga-related-enum>
 */
export type MangaRelation = "adapted_from" | "alternate_story" | "alternate_version" | "based_on" | "colored" | "doujinshi" | "main_story" | "monochrome" | "prequel" | "preserialization" | "same_franchise" | "sequel" | "serialization" | "shared_universe" | "side_story" | "spin_off"

/**
 * User roles that define what a user has permission to do.
 * More details at : https://api.mangadex.org/docs/static-data/#user-roles-enum
 */
export type UserRole = "ROLE_ADMIN" | "ROLE_BANNED" | "ROLE_CONTRIBUTOR" | "ROLE_DESIGNER" | "ROLE_DEVELOPER" | "ROLE_FORUM_MODERATOR" | "ROLE_GLOBAL_MODERATOR" | "ROLE_GROUP_LEADER" | "ROLE_GROUP_MEMBER" | "ROLE_GUEST" | "ROLE_MEMBER" | "ROLE_MD_AT_HOME" | "ROLE_POWER_UPLOADER" | "ROLE_PUBLIC_RELATIONS" | "ROLE_STAFF" | "ROLE_UNVERIFIED" | "ROLE_USER" | "ROLE_VIP" | "UNKNOWN"

export type RelatedAttributes = MangaAttributes | ChapterAttributes | CoverAttributes | AuthorAttributes | ScanlationGroupAttributes | TagAttributes | UserAttributes | CustomListAttributes

export type Results<T> = { result?: ResultType; response: ResponseType; data: T[]; limit: number; offset: number; total: number }

/**
 * BookWalker URI.
 * 
 * Example: "`series/91701`".
 */
export type BookWalker = string

/**
 * Manga state for approval.
 * 
 * The purpose of these are to discourage troll entries by requiring staff approval.
 */
export type MangaState = "draft" | "published" | "rejected" | "submitted"

export type ResultType = "ok" | "error"

/**
 * NovelUpdates slug.
 * 
 * Example: "`novel-updates`".
 */
export type NovelUpdates = string

export type TagAttributes = { name: { [key: Language]: string }; description: { [key: Language]: string }; group: TagGroup; version: number }

export type TagGroup = "content" | "format" | "genre" | "theme"

/**
 * General manga information.
 */
export type MangaAttributes = { title: { [key: Language]: string }; altTitles: { [key: Language]: string }[]; description: { [key: Language]: string }; isLocked?: boolean; links: MangaLinks | null; originalLanguage: Language; lastVolume: string | null; lastChapter: string | null; publicationDemographic: Demographic | null; status: MangaStatus; year: number | null; contentRating: ContentRating | null; chapterNumbersResetOnNewVolume?: boolean; latestUploadedChapter: string | null; availableTranslatedLanguages: Language[]; tags: ApiObject<TagAttributes>[]; state: MangaState; createdAt: string; updatedAt: string | null; version: number }

/**
 * 
 * <https://api.mangadex.org/docs/static-data/#relationship-types>
 * 
 * This should only be used with the `type` response field.
 * For use with the `includes[]` query parameter, refer to the [`ReferenceExpansionResource` enum](crate::ReferenceExpansionResource).
 */
export type RelationshipType = "manga" | "chapter" | "cover_art" | "author" | "artist" | "scanlation_group" | "tag" | "user" | "custom_list" | "mapping_id" | "leader" | "member" | "report_reason" | "report" | "upload_session" | "upload_session_file" | "collection" | "manga_relation" | "creator" | "thread" | "api_client" | "unknown"

/**
 * Languages supported by MangaDex.
 */
export type Language = "ar" | "az" | "bn" | "bg" | "my" | "ca" | "zh-ro" | "zh" | "zh-hk" | "hr" | "cs" | "da" | "nl" | "en" | "eo" | "tl" | "fi" | "fr" | "de" | "el" | "he" | "hi" | "hu" | "id" | "it" | "ja" | "ja-ro" | "kk" | "ko" | "ko-ro" | "la" | "lt" | "ms" | "mn" | "ne" | "kr" | "no" | "fa" | "pl" | "pt-br" | "pt" | "rm" | "ro" | "ru" | "sr" | "sk" | "es" | "es-la" | "sv" | "ta" | "th" | "tr" | "uk" | "vi" | "NULL"

/**
 * General chapter information.
 * More details at https://api.mangadex.org/docs/swagger.html#model-ChapterAttributes
 */
export type ChapterAttributes = { title: string; volume: string | null; chapter: string | null; pages: number; translatedLanguage: Language; uploader?: string | null; externalUrl: string | null; version: number; createdAt: MangaDexDateTime; updatedAt: MangaDexDateTime | null; publishAt: string; readableAt: string }

/**
 * MyAnimeList ID.
 * 
 * Example: "`98436`".
 */
export type MyAnimeList = string

/**
 * Target demographic for manga.
 */
export type Demographic = "shounen" | "shoujo" | "seinen" | "josei" | "none"

export type CustomListVisibility = "Public" | "Private"

/**
 * MangaUpdates ID.
 * 
 * Example: "`132515`".
 */
export type MangaUpdates = string

/**
 * General author information.
 */
export type AuthorAttributes = { name: string; imageUrl: string | null; biography: { [key: Language]: string }; twitter: string | null; pixiv: string | null; melonBook: string | null; fanBox: string | null; booth: string | null; nicoVideo: string | null; skeb: string | null; fantia: string | null; tumblr: string | null; youtube: string | null; weibo: string | null; naver: string | null; website: string | null; version: number; createdAt: string; updatedAt: string | null }

/**
 * Related links for a manga.
 */
export type MangaLinks = { amz?: string | null; al?: string | null; ap?: string | null; bw?: BookWalker | null; cdj?: string | null; ebj?: string | null; engtl?: string | null; kt?: string | null; mu?: MangaUpdates | null; mal?: MyAnimeList | null; nu?: NovelUpdates | null; raw?: string | null }

/**
 * Newtype struct for handling datetime fields in MangaDex.
 */
export type MangaDexDateTime = string

/**
 * General cover information.
 */
export type CoverAttributes = { description: string; locale: Language | null; volume: string | null; fileName: string; createdAt: string; updatedAt: string | null; version: number }

export type ResponseType = "collection" | "entity"

export type MangaStatus = "ongoing" | "completed" | "hiatus" | "cancelled"

export type CustomListAttributes = { name: string; visibility: CustomListVisibility; version: number }

export type ApiObject<A> = { id: string; type: RelationshipType; attributes: A; relationships: Relationship[] }

export type Relationship = { id: string; type: RelationshipType; related?: MangaRelation | null; attributes?: RelatedAttributes | null }

export type ContentRating = "erotica" | "pornographic" | "safe" | "suggestive"

/**
 * General scanlation group information.
 */
export type ScanlationGroupAttributes = { name: string; altNames: { [key: Language]: string }[]; website: string | null; ircServer: string | null; ircChannel: string | null; discord: string | null; contactEmail: string | null; description: string | null; twitter: string | null; mangaUpdates: string | null; focusedLanguages: Language[] | null; locked: boolean; official: boolean; verified: boolean; inactive: boolean; exLicensed?: boolean | null; publishDelay: string | null; version: number; createdAt: MangaDexDateTime; updatedAt: MangaDexDateTime }

/**
 * General user information.
 */
export type UserAttributes = { username: string; roles: UserRole[]; version: number }
